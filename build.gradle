/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
	compile project(':Slime Java Commons')

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.yaml:snakeyaml:1.25'
    compile 'net.java.dev.jna:jna:5.6.0'
    compile 'net.java.dev.jna:jna-platform:5.6.0'
    compile 'com.illposed.osc:javaosc-core:0.8'
    compile 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'
    

    // Use JUnit test framework
	testImplementation platform('org.junit:junit-bom:5.7.2')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.junit.platform:junit-platform-launcher'
}
test {
    useJUnitPlatform()
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }
task serverJar (type: Jar, dependsOn: subprojects.tasks['build']) {
    // Make the JAR runnable
    manifest {
        attributes 'Main-Class': 'io.eiren.vr.Main'
    }
    
    // Pack all dependencies within the JAR
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Add this project's classes in the JAR
    with jar
}
