import { useEffect, useMemo, useState } from "react";
import { useForm } from "react-hook-form";
import { InboundUnion, OutboundUnion, SkeletonConfigRequestT, SkeletonConfigResponseT, SkeletonConfigValue, SkeletonPartT } from "slimevr-protocol/dist/server";
import { useLayout } from "../hooks/layout";
import { useWebsocketAPI } from "../hooks/websocket-api";
import { NumberSelector } from "./commons/NumberSelector";



export function BodyProportions() {
    const { usePacket, sendPacket } = useWebsocketAPI();
    const { control } = useForm({ defaultValues: { test: 0 } });
    const { ref, layoutHeight } = useLayout();
    const [config, setConfig] = useState<SkeletonConfigResponseT | null>(null); 

    const bodyParts = useMemo(() => {
        return config?.skeletonParts.map(({ id, value }) => ({ id, label: SkeletonConfigValue[id], value })) || []
    }, [config])

    usePacket(OutboundUnion.SkeletonConfigResponse, (data: SkeletonConfigResponseT) => {
        console.log(data);
        setConfig(data);
    })

    useEffect(() => {
        sendPacket(InboundUnion.SkeletonConfigRequest, new SkeletonConfigRequestT())
    }, [])

    return (
        <div className="flex flex-col overflow-y-auto">
            <div className="flex text-white text-2xl px-8 pt-8 font-bold">
                Body Proportions
            </div>
            <div ref={ref} className="flex p-5 gap-8 h-full justify-center">
                <div className="bg-primary-1 rounded-lg w-80 h-full flex justify-center p-10">
                    <svg  width="100%" height="100%" style={{ display: 'block' }} preserveAspectRatio="xMidYMi meet" viewBox="0 0 157 532" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M17.529 295.998C16.9938 294.821 16.2648 293.698 15.9633 292.455C15.3139 289.778 15.062 286.977 14.2781 284.355C13.9601 283.291 12.7892 282.278 11.7798 281.823C11.3987 281.651 10.1498 282.984 9.69464 283.868C8.63345 285.929 8.81559 287.982 9.82135 290.186C11.5109 293.889 12.8772 297.762 14.4566 301.758C5.2796 299.3 -1.91242 286.408 0.455424 277.147C1.09346 274.652 1.72418 272.153 2.40545 269.671C4.07375 263.755 4.87492 257.595 4.78016 251.413C4.63196 242.953 5.6238 234.456 6.3448 225.997C7.18341 216.157 8.36862 206.351 9.19493 196.511C9.80962 189.188 10.7394 182.11 14.3357 175.559C19.1574 166.776 18.8564 156.96 18.3323 147.192C17.6786 135.011 16.9519 122.831 16.5164 110.64C16.4131 107.75 17.1492 104.762 17.8399 101.915C19.3101 95.8537 22.8111 91.5266 28.4069 89.634C35.3736 87.2778 42.4879 85.4213 49.4371 83.0121C52.6984 81.8636 55.82 80.299 58.7352 78.3516C63.4571 75.2139 66.0949 70.5211 65.5197 64.3766C65.0436 59.0581 64.3146 53.7693 63.3357 48.531C63.1155 47.6613 62.7374 46.8472 62.2232 46.1356C61.709 45.4239 61.0689 44.8288 60.3397 44.3845C56.0041 42.0376 55.9991 38.3472 56.4257 34.5264C57.0172 29.229 57.5721 23.9188 58.4082 18.6629C59.3405 12.8027 61.5796 7.69721 66.8119 4.78861C68.7231 3.7262 70.6649 2.72475 72.6135 1.74323C80.4218 -2.18994 90.7324 0.74827 95.7508 8.38585C98.3387 12.3246 99.9118 16.6211 99.7733 21.5843C99.67 25.2772 99.9068 28.9178 101.651 32.3339C102.962 34.9017 102.242 37.6266 101.04 40.0547C99.0593 44.0546 96.8263 47.91 94.8613 51.918C91.4104 58.9571 91.7248 65.9715 95.3509 72.8454C97.6363 77.3895 101.454 80.8189 106.018 82.4283C112.225 84.5789 118.587 86.2186 124.905 87.9824C135.881 91.0463 140.156 96.652 141.212 108.813C142.147 119.585 140.757 130.225 140.252 140.926C139.865 149.118 139.569 157.405 140.314 165.535C140.773 170.546 142.886 175.532 144.923 180.193C148.908 189.313 149.515 199.054 150.372 208.8C151.156 217.718 152.136 226.618 152.777 235.546C153.274 241.717 153.468 247.911 153.36 254.103C153.192 260.502 154.341 266.586 155.76 272.704C156.919 277.446 157.27 282.376 156.794 287.253C155.941 295.418 150.479 299.115 144.832 302.814C144.608 302.941 144.351 302.986 144.101 302.94C143.754 302.802 143.423 302.62 143.116 302.398C143.955 300.807 144.979 299.328 145.559 297.669C146.756 294.25 147.736 290.742 148.749 287.252C148.913 286.715 148.884 286.133 148.669 285.618C148.015 284.426 147.203 283.334 146.454 282.203C145.56 283.288 144.244 284.224 143.858 285.488C143.005 288.284 142.741 291.283 141.973 294.116C141.725 295.032 140.654 295.689 139.96 296.464C139.717 295.521 139.217 294.561 139.272 293.638C139.732 285.886 140.196 278.131 140.88 270.399C141.134 267.74 141.71 265.128 142.595 262.63C144.795 256.336 145.336 250.054 143.18 243.655C139.667 233.23 136.564 222.61 132.469 212.454C127.459 200.025 124.621 187.096 122.314 173.882C120.793 165.168 120.889 156.402 120.331 147.653C120.272 146.732 120.488 145.631 120.086 144.947C119.788 144.439 118.7 144.38 117.951 144.323C117.752 144.309 117.434 145.016 117.29 145.439C114.45 153.788 111.877 162.215 111.134 171.145C110.329 180.824 113.279 189.578 116.988 198.111C118.882 202.468 120.885 206.779 123.026 211.002C131.909 228.527 133.899 247.072 129.999 266.399C125.679 287.805 121.089 309.148 116.706 330.54C114.95 339.113 113.419 347.739 111.826 356.35C111.655 357.445 111.585 358.555 111.617 359.665C111.661 377.536 111.72 395.406 111.793 413.277C111.809 416.605 111.878 419.944 112.136 423.259C112.856 432.505 110.659 441.194 108.233 449.924C105.307 460.452 102.484 471.033 100.155 481.727C98.4222 489.699 98.5286 498.006 100.465 505.924C101.145 508.735 103.051 511.244 104.588 513.757C105.428 515.129 106.737 516.157 107.706 517.451C108.982 519.155 108.228 521.284 106.209 521.506C100.308 522.156 94.4004 522.756 88.4826 523.162C87.6029 523.222 86.1731 522.356 85.8301 521.522C84.8744 519.199 83.7548 516.661 83.7789 514.221C83.8498 507.028 83.9421 499.76 84.936 492.669C86.9277 478.456 87.0239 464.437 84.6198 450.23C81.8649 433.901 81.9502 417.164 84.8714 400.869C85.8993 395.049 84.7728 389.437 83.5223 383.875C81.9574 376.916 82.4399 370.004 82.7862 362.945C83.3832 350.777 83.4757 338.551 83.1639 326.368C82.8662 314.737 81.4567 303.138 81.167 291.507C80.9929 284.518 82.0432 277.495 82.5049 270.484C82.6143 268.824 82.6093 267.152 82.5898 265.487C82.5481 261.908 81.822 261.217 78.5768 261.567C75.8495 261.861 75.2089 262.788 75.5127 265.733C77.5402 285.383 78.0454 305.108 76.0778 324.745C74.2229 343.257 72.9921 361.745 73.3236 380.362C73.389 384.035 72.5124 387.726 72.5798 391.398C72.6622 395.9 73.3027 400.389 73.662 404.886C74.4255 414.446 75.9359 424.03 75.6943 433.561C75.4527 443.097 74.0185 452.718 72.0843 462.057C69.2103 475.935 69.4939 489.494 72.4661 503.27C73.5502 508.294 73.2819 513.687 73.369 518.917C73.392 519.484 73.3048 520.051 73.1128 520.58C72.9208 521.11 72.6284 521.59 72.2541 521.991C71.8798 522.392 71.4319 522.704 70.939 522.909C70.4461 523.113 69.9189 523.205 69.3912 523.178C62.6431 522.657 55.9298 521.608 49.2077 520.721C48.74 520.66 48.3102 520.266 47.4291 519.795C48.4983 518.358 49.2094 516.745 50.395 515.918C56.9668 511.334 57.9761 504.105 58.2939 496.714C58.8756 483.19 55.5438 470.347 51.9257 457.571C49.5963 449.345 47.3783 441.084 45.2715 432.787C44.7643 430.792 44.8669 428.616 44.724 426.52C44.6802 425.877 44.7627 425.225 44.7709 424.577C44.9875 407.455 44.9296 390.323 45.5068 373.215C45.933 360.585 44.0743 348.375 41.6478 336.133C36.6495 310.916 31.7813 285.669 27.0432 260.392C25.433 251.714 26.0629 242.937 27.4815 234.194C29.4646 221.973 34.7303 211.056 38.9474 199.73C41.9929 191.552 44.9463 183.39 46.1067 174.61C47.5948 163.351 44.9711 153.152 39.1977 143.789C38.8371 143.204 38.0341 142.935 37.4369 142.519C37.0117 143.332 36.2663 144.121 36.2122 144.962C35.7964 151.414 35.6261 157.885 35.1694 164.333C34.1236 179.1 30.67 193.275 26.0118 207.172C22.4838 217.698 19.353 228.378 15.8293 238.905C12.7949 247.971 13.0707 256.946 15.1725 266.174C16.804 273.337 17.8878 280.656 18.9546 287.95C19.3247 290.48 18.9128 293.143 18.8581 295.746L17.529 295.998Z" fill="#8E6BA7"/>
                        <line x1="30" y1="244.915" x2="127" y2="244.915" stroke="black" strokeWidth="2"/>
                        <line x1="128" y1="237.098" x2="128" y2="254.733" stroke="black" strokeWidth="2"/>
                        <path d="M30 237.098L30 254.733" stroke="black" strokeWidth="2"/>
                    </svg>
                </div>
                <div className="flex mx-10">
                    <div className="flex-col flex gap-2">
                        {bodyParts.map(({label}) => <NumberSelector variant="big" control={control} label={label} min={-100} max={100} step={1} name="test" valueLabelFormat={(value) => `${value}cm` }></NumberSelector>)}
                    </div>
                </div>
            </div>
        </div>
      
    )
}